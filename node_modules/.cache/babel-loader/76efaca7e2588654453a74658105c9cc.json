{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/josharsh/Desktop/Projects/Konfhub-Frontend/src/SearchFilter.js\";\nimport React, { Component } from \"react\";\nimport Conference from \"./Conference\";\nimport { Nav, Navbar, Form, FormControl } from 'react-bootstrap';\nimport \"./App.css\";\n\nclass SearchFilter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      freeConf: [],\n      paidConf: [],\n      itemsToDisplay: [],\n      itemsToUse: [],\n      countries: [],\n      cities: [],\n      search: \"\"\n    };\n\n    this.filterOnSearch = event => {\n      this.setState({\n        search: event.target.value\n      });\n      if (!event.target.value || event.target.value === \" \" || event.target.value === \"\") this.setState({\n        itemsToDisplay: [...this.state.itemsToUse]\n      });else {\n        let itemsToDisplay = [];\n        itemsToDisplay = this.state.itemsToUse.filter(item => item.searchTerms.toLowerCase().includes(this.state.search.toLowerCase()));\n        this.setState({\n          itemsToDisplay\n        });\n      }\n    };\n\n    this.countryFilter = () => {\n      var e = document.getElementById(\"countryfilter\");\n      var selected = e.options[e.selectedIndex].text;\n      if (selected === \"Choose Any\") this.setState({\n        itemsToDisplay: [...this.state.itemsToUse]\n      });else {\n        let itemsToDisplay = [];\n        itemsToDisplay = this.state.itemsToUse.filter(item => item[\"country\"].toLowerCase().includes(selected.toLowerCase()));\n        this.setState({\n          itemsToDisplay\n        });\n      }\n    };\n\n    this.cityFilter = () => {\n      var e = document.getElementById(\"cityfilter\");\n      var selected = e.options[e.selectedIndex].text;\n      if (selected === \"Choose Any\") this.setState({\n        itemsToDisplay: [...this.state.itemsToUse]\n      });else {\n        let itemsToDisplay = [];\n        itemsToDisplay = this.state.itemsToUse.filter(item => item[\"city\"].toLowerCase().includes(selected.toLowerCase()));\n        this.setState({\n          itemsToDisplay\n        });\n      }\n    };\n\n    this.typeFilter = () => {\n      var e = document.getElementById(\"typefilter\");\n      var selected = e.options[e.selectedIndex].text;\n      if (selected === \"Choose Any\") this.setState({\n        itemsToDisplay: [...this.state.itemsToUse]\n      });else {\n        let itemsToDisplay = [];\n        itemsToDisplay = this.state.itemsToUse.filter(item => item[\"type\"].toLowerCase().includes(selected.toLowerCase()));\n        this.setState({\n          itemsToDisplay\n        });\n      }\n    };\n\n    this.onlyUnique = (value, index, self) => {\n      return self.indexOf(value) === index;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"dark\",\n        variant: \"dark\",\n        children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"#home\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            src: \"/logo.svg\",\n            width: \"30\",\n            height: \"30\",\n            className: \"d-inline-block align-top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }, this), ' ', \"React Bootstrap\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"search-form\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          style: {\n            margin: \"auto\",\n            width: \"50%\"\n          },\n          type: \"text\",\n          value: this.state.search,\n          onChange: this.filterOnSearch,\n          placeholder: \"Search by name or city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"countryfilter\",\n          className: \"dropbtn\",\n          onChange: this.countryFilter,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"dropdown-content\",\n            value: \"any\",\n            selected: \"selected\",\n            children: \"Filter by Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), this.state.countries.map(country => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country,\n              children: country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"cityfilter\",\n          className: \"dropbtn\",\n          onChange: this.cityFilter,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"dropdown-content\",\n            value: \"any\",\n            children: \"Filter by City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), this.state.cities.map(city => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city,\n              children: city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"typefilter\",\n          className: \"dropbtn\",\n          onChange: this.typeFilter,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"dropdown-content\",\n            value: \"any\",\n            children: \"Free/Paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"free\",\n            children: \"free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"paid\",\n            children: \"paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: this.state.itemsToDisplay.map((conf, index) => {\n          return /*#__PURE__*/_jsxDEV(Conference, {\n            type: conf.type,\n            title: conf.confName,\n            place: conf.venue,\n            imageURL: conf.imageURL.replace(\"\\\"\", \"\"),\n            startDate: conf.confStartDate,\n            endDate: conf.confEndDate,\n            website: conf.confUrl\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\"https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences\");\n    const jsonResponse = await response.json();\n\n    for (let i = 0; i < jsonResponse[\"paid\"].length; ++i) {\n      if (jsonResponse.paid[i].imageURL.charAt(jsonResponse.paid[i].imageURL.length - 1) == \"\\\"\") {\n        jsonResponse.paid[i].imageURL = jsonResponse.paid[i].imageURL.slice(0, -1);\n      }\n    }\n\n    for (let i = 0; i < jsonResponse[\"free\"].length; ++i) {\n      if (jsonResponse.free[i].imageURL.charAt(jsonResponse.free[i].imageURL.length - 1) == \"\\\"\") {\n        jsonResponse.free[i].imageURL = jsonResponse.free[i].imageURL.slice(0, -1);\n      }\n    }\n\n    this.setState({\n      freeConf: jsonResponse.free\n    });\n    this.setState({\n      paidConf: jsonResponse.paid\n    });\n    this.reRenderList();\n  }\n\n  reRenderList() {\n    var cities = [];\n    var countries = [];\n    var itemsToDisplay = [];\n\n    for (var i = 0; i < this.state.freeConf.length; i++) {\n      var item = this.state.freeConf[i];\n      item.type = \"Free\"; // if (item.imageURL.charAt(item.imageURL.length - 1) === '\\\\\"') {\n      //   item.imageURL = item.imageURL.slice(0, -1);\n      // }\n\n      itemsToDisplay.push(this.state.freeConf[i]);\n      countries.push(this.state.freeConf[i][\"country\"].toLowerCase().trim());\n      cities.push(this.state.freeConf[i][\"city\"].toLowerCase().trim());\n    }\n\n    for (i = 0; i < this.state.paidConf.length; i++) {\n      item = this.state.paidConf[i];\n      item.type = \"Paid\";\n      itemsToDisplay.push(this.state.paidConf[i]);\n      countries.push(this.state.paidConf[i][\"country\"].toLowerCase().trim());\n      cities.push(this.state.paidConf[i][\"city\"].toLowerCase().trim());\n    }\n\n    countries = Array.from(new Set(countries));\n    cities = Array.from(new Set(cities));\n    countries.sort();\n    cities.sort();\n    console.log(countries);\n    this.setState({\n      countries\n    });\n    this.setState({\n      cities\n    });\n    this.setState({\n      itemsToDisplay\n    }, () => {\n      this.setState({\n        itemsToUse: [...this.state.itemsToDisplay]\n      });\n    });\n  }\n\n}\n\nexport default SearchFilter;","map":{"version":3,"sources":["/home/josharsh/Desktop/Projects/Konfhub-Frontend/src/SearchFilter.js"],"names":["React","Component","Conference","Nav","Navbar","Form","FormControl","SearchFilter","state","freeConf","paidConf","itemsToDisplay","itemsToUse","countries","cities","search","filterOnSearch","event","setState","target","value","filter","item","searchTerms","toLowerCase","includes","countryFilter","e","document","getElementById","selected","options","selectedIndex","text","cityFilter","typeFilter","onlyUnique","index","self","indexOf","render","margin","width","map","country","city","conf","type","confName","venue","imageURL","replace","confStartDate","confEndDate","confUrl","componentDidMount","response","fetch","jsonResponse","json","i","length","paid","charAt","slice","free","reRenderList","push","trim","Array","from","Set","sort","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Conference from \"./Conference\";\nimport { Nav, Navbar, Form, FormControl } from 'react-bootstrap';\nimport \"./App.css\";\n\nclass SearchFilter extends Component {\n  state = {\n    freeConf: [],\n    paidConf: [],\n    itemsToDisplay: [],\n    itemsToUse: [],\n    countries: [],\n    cities: [],\n    search: \"\",\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">\n        <img\n          alt=\"\"\n          src=\"/logo.svg\"\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n        />{' '}\n          React Bootstrap\n        </Navbar.Brand>\n      </Navbar>\n        <form className=\"search-form\">\n          <input\n            className=\"form-control\"\n            style= {{margin: \"auto\", width:\"50%\"}}\n            type=\"text\"\n            value={this.state.search}\n            onChange={this.filterOnSearch}\n            placeholder=\"Search by name or city\"\n          />\n        </form>\n        <div className=\"dropdown\">\n          <select id=\"countryfilter\" className =\"dropbtn\" onChange={this.countryFilter}>\n            <option className=\"dropdown-content\" value=\"any\" selected=\"selected\">\n            Filter by Country\n            </option>\n            {this.state.countries.map((country) => {\n              return <option value={country}>{country}</option>;\n            })}\n          </select>\n        </div>\n        <br />\n        <div className=\"dropdown\">\n          <select id=\"cityfilter\" className =\"dropbtn\"  onChange={this.cityFilter}>\n            <option className=\"dropdown-content\"  value=\"any\">Filter by City</option>\n            {this.state.cities.map((city) => {\n              return <option value={city}>{city}</option>;\n            })}\n          </select>\n        </div>\n        <br />\n\n        <div className=\"dropdown\">\n          <select id=\"typefilter\" className =\"dropbtn\"  onChange={this.typeFilter}>\n            <option className=\"dropdown-content\" value=\"any\">Free/Paid</option>\n            <option value=\"free\">free</option>\n            <option value=\"paid\">paid</option>\n          </select>\n        </div>\n\n        <br />\n\n        <div className=\"grid\">\n          {this.state.itemsToDisplay.map((conf, index) => {\n            return (\n              <Conference\n                key={index}\n                type={conf.type}\n                title={conf.confName}\n                place={conf.venue}\n                imageURL={conf.imageURL.replace(\"\\\"\",\"\")}\n                startDate={conf.confStartDate}\n                endDate={conf.confEndDate}\n                website={conf.confUrl}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  filterOnSearch = (event) => {\n    this.setState({ search: event.target.value });\n    if (\n      !event.target.value ||\n      event.target.value === \" \" ||\n      event.target.value === \"\"\n    )\n      this.setState({ itemsToDisplay: [...this.state.itemsToUse] });\n    else {\n      let itemsToDisplay = [];\n      itemsToDisplay = this.state.itemsToUse.filter((item) =>\n        item.searchTerms.toLowerCase().includes(this.state.search.toLowerCase())\n      );\n      this.setState({ itemsToDisplay });\n    }\n  };\n\n  countryFilter = () => {\n    var e = document.getElementById(\"countryfilter\");\n    var selected = e.options[e.selectedIndex].text;\n\n    if (selected === \"Choose Any\")\n      this.setState({ itemsToDisplay: [...this.state.itemsToUse] });\n    else {\n      let itemsToDisplay = [];\n      itemsToDisplay = this.state.itemsToUse.filter((item) =>\n        item[\"country\"].toLowerCase().includes(selected.toLowerCase())\n      );\n      this.setState({ itemsToDisplay });\n    }\n  };\n\n  cityFilter = () => {\n    var e = document.getElementById(\"cityfilter\");\n    var selected = e.options[e.selectedIndex].text;\n\n    if (selected === \"Choose Any\")\n      this.setState({ itemsToDisplay: [...this.state.itemsToUse] });\n    else {\n      let itemsToDisplay = [];\n      itemsToDisplay = this.state.itemsToUse.filter((item) =>\n        item[\"city\"].toLowerCase().includes(selected.toLowerCase())\n      );\n      this.setState({ itemsToDisplay });\n    }\n  };\n\n  typeFilter = () => {\n    var e = document.getElementById(\"typefilter\");\n    var selected = e.options[e.selectedIndex].text;\n\n    if (selected === \"Choose Any\")\n      this.setState({ itemsToDisplay: [...this.state.itemsToUse] });\n    else {\n      let itemsToDisplay = [];\n      itemsToDisplay = this.state.itemsToUse.filter((item) =>\n        item[\"type\"].toLowerCase().includes(selected.toLowerCase())\n      );\n      this.setState({ itemsToDisplay });\n    }\n  };\n\n  async componentDidMount() {\n    const response = await fetch(\n      \"https://o136z8hk40.execute-api.us-east-1.amazonaws.com/dev/get-list-of-conferences\"\n    );\n    const jsonResponse = await response.json();\n    for(let i=0;i<jsonResponse[\"paid\"].length;++i){\n      if(jsonResponse.paid[i].imageURL.charAt(jsonResponse.paid[i].imageURL.length-1)==\"\\\"\"){\n        jsonResponse.paid[i].imageURL=jsonResponse.paid[i].imageURL.slice(0,-1);\n      }\n    }\n    for(let i=0;i<jsonResponse[\"free\"].length;++i){\n      if(jsonResponse.free[i].imageURL.charAt(jsonResponse.free[i].imageURL.length-1)==\"\\\"\"){\n        jsonResponse.free[i].imageURL=jsonResponse.free[i].imageURL.slice(0,-1);\n      }\n    }\n    this.setState({ freeConf: jsonResponse.free });\n    this.setState({ paidConf: jsonResponse.paid });\n    this.reRenderList();\n  }\n\n  onlyUnique = (value, index, self) => {\n    return self.indexOf(value) === index;\n  };\n\n  reRenderList() {\n    var cities = [];\n    var countries = [];\n    var itemsToDisplay = [];\n    for (var i = 0; i < this.state.freeConf.length; i++) {\n      var item = this.state.freeConf[i];\n      item.type = \"Free\";\n      // if (item.imageURL.charAt(item.imageURL.length - 1) === '\\\\\"') {\n      //   item.imageURL = item.imageURL.slice(0, -1);\n      // }\n      itemsToDisplay.push(this.state.freeConf[i]);\n      countries.push(this.state.freeConf[i][\"country\"].toLowerCase().trim());\n      cities.push(this.state.freeConf[i][\"city\"].toLowerCase().trim());\n    }\n\n    for (i = 0; i < this.state.paidConf.length; i++) {\n      item = this.state.paidConf[i];\n      item.type = \"Paid\";\n      itemsToDisplay.push(this.state.paidConf[i]);\n      countries.push(this.state.paidConf[i][\"country\"].toLowerCase().trim());\n      cities.push(this.state.paidConf[i][\"city\"].toLowerCase().trim());\n    }\n\n    countries = Array.from(new Set(countries));\n    cities = Array.from(new Set(cities));\n\n    countries.sort();\n    cities.sort();\n    console.log(countries);\n    this.setState({ countries });\n    this.setState({ cities });\n    this.setState({ itemsToDisplay }, () => {\n      this.setState({ itemsToUse: [...this.state.itemsToDisplay] });\n    });\n  }\n}\n\nexport default SearchFilter;\n"]},"metadata":{},"sourceType":"module"}